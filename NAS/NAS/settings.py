"""
Django settings for NAS project.

Generated by 'django-admin startproject' using Django 3.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'j8)6wv%1_s%#b!8i5ho&uuja7%5$7=9ovesm6%+nwqrs)2jlam'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'nas_app.apps.NasAppConfig',
    'corsheaders',      # 配置跨域
]
DATA_UPLOAD_MAX_MEMORY_SIZE = 10485760
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'nas_app.isLogin.LoginEstimate',
]

ROOT_URLCONF = 'NAS.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'NAS.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'NAS.sqlite3'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

# CORS_ALLOW_CREDENTIALS = True
# CORS_ORIGIN_ALLOW_ALL = True
# CORS_ORIGIN_WHITELIST = (
#     'https://*',
#     'http://*',
# )

# 允许携带cookie
CORS_ALLOW_CREDENTIALS = True
# 允许访问来源
CORS_ALLOWED_ORIGINS = ["http://localhost:8080"]
# 允许所有来源
CORS_ORIGIN_ALLOW_ALL = True
# 白名单设置
# CORS_ORIGIN_WHITELIST = ()
# 允许的请求方法
CORS_ALLOW_METHODS = (
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
    'VIEW',
)
# 允许的请求头部
CORS_ALLOW_HEADERS = (
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
)


STATIC_URL = '/static/'
STATICFILES_DIRS = [  # 注意，这是一个列表，需要传入你创建的静态文件夹的绝对路径，BASE_DIR表示当前路径
    os.path.join(BASE_DIR, 'staticfile')
]


USERNAME_KEY = 'yangxu19970325wangqiao'

# NAS settings
# 存储根目录
NAS_DIR = os.path.join(BASE_DIR, 'staticfile', 'NAS')
# 文件上传缓存目录
BUFFER_DIR = os.path.join(BASE_DIR, 'staticfile', 'buffer')
# 重名文件是否进行区分（True为不覆盖，False为覆盖）
IS_NODUP = True
# 保存到磁盘是否base64加密文件名
IS_BASE64_ENCRYPT = True

IMAGE_TYPE = ['bmp', 'jpg', 'jpeg', 'png', 'tif', 'gif', 'pcx', 'tga', 'exif', 'fpx', 'psd', 'cdr', 'pcd', 'dxf',
              'ufo', 'eps', 'ai', 'raw', 'WMF', 'webp', 'avif', 'apng']
VIDEO_TYPE = ['mp4', 'flv', 'f4v', 'webm, m4v', 'mov', '3gp', '3g2', 'rm', 'rmvb, wmv', 'avi', 'asf, mpg', 'mpeg',
              'mpe', 'ts', 'div', 'dv', 'divx', 'vob', 'mkv', 'lavf', 'cpk', 'dirac', 'ram', 'qt', 'fli', 'flc',
              'mod']
AUDIO_TYPE = ['acc', 'cda', 'wav', 'mp3', 'aif', 'aiff', 'mid', 'wma', 'ra', 'vqf', 'ape']
EXCEL_TYPE = ['xls', 'xlsx', 'csv']
WORD_TYPE = ['doc', 'docx']
PDF_TYPE = ['pdf']
PPT_TYPE = ['ppt', 'pptx']
ZIP_TYPE = ['rar', 'tar', 'zip', 'gzip', 'cab', 'uue', 'arj', 'bz2', 'lzh', 'jar', 'ace', 'iso', '7-zip', 'z']
TXT_TYPE = ['txt', 'log']
CONF_TYPE = ['ini', 'conf', 'config', 'xml', 'data']
EXE_TYPE = ['exe']
BT_TYPE = ['torrent']
BAT_TYPE = ['bat']

NAS_FILE_TYPE = {'image': IMAGE_TYPE, 'word': WORD_TYPE, 'excel': EXCEL_TYPE, 'pdf': PDF_TYPE,
                 'ppt': PPT_TYPE, 'zip': ZIP_TYPE, 'txt': TXT_TYPE, 'video': VIDEO_TYPE, 'audio': AUDIO_TYPE,
                 'exe': EXE_TYPE, 'bt': BT_TYPE, 'conf': CONF_TYPE, 'bat': BAT_TYPE}
MY_WORD = ['word', 'excel', 'pdf', 'ppt', 'txt']
MY_IMAGE = ['image']
MY_VIDEO = ['video']
MY_AUDIO = ['audio']
MY_BT = ['bt']
NAS_FILE_CLASS = {'img': MY_IMAGE, 'doc': MY_WORD, 'video': MY_VIDEO, 'audio': MY_AUDIO, 'link': MY_BT}


